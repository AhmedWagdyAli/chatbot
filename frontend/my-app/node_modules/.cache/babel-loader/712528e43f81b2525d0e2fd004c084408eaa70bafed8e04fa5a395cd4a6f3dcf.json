{"ast":null,"code":"var _jsxFileName = \"/home/ahmed/chatbot/frontend/my-app/src/components/FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FileUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    setUploading(true);\n    setError(null);\n    try {\n      const response = await fetch('http://127.0.0.1:8000/upload', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          // Add headers if needed\n        },\n        onUploadProgress: progressEvent => {\n          if (progressEvent.total) {\n            setUploadProgress(Math.round(progressEvent.loaded * 100 / progressEvent.total));\n          }\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n      alert('File uploaded successfully!');\n    } catch (err) {\n      setError(err.message);\n      console.error('Upload error:', err);\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload a File\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      disabled: uploading,\n      children: uploading ? 'Uploading...' : 'Upload File'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), uploading && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"progress\", {\n        value: uploadProgress,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [uploadProgress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(FileUpload, \"XWx+T4W22NderPUs+d7taCnjgKU=\");\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FileUpload","_s","file","setFile","uploadProgress","setUploadProgress","uploading","setUploading","error","setError","handleFileChange","e","target","files","handleUpload","alert","formData","FormData","append","response","fetch","method","body","headers","onUploadProgress","progressEvent","total","Math","round","loaded","ok","Error","err","message","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","disabled","value","max","style","color","_c","$RefreshReg$"],"sources":["/home/ahmed/chatbot/frontend/my-app/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction FileUpload() {\n  const [file, setFile] = useState(null);\n  const [uploadProgress, setUploadProgress] = useState(0);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      alert('Please select a file to upload');\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append('file', file);\n\n    setUploading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('http://127.0.0.1:8000/upload', {\n        method: 'POST',\n        body: formData,\n        headers: {\n          // Add headers if needed\n        },\n        onUploadProgress: (progressEvent) => {\n          if (progressEvent.total) {\n            setUploadProgress(Math.round((progressEvent.loaded * 100) / progressEvent.total));\n          }\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error('Upload failed');\n      }\n\n      alert('File uploaded successfully!');\n    } catch (err) {\n      setError(err.message);\n      console.error('Upload error:', err);\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div>\n      <h1>Upload a File</h1>\n      <input type=\"file\" onChange={handleFileChange} />\n      <button onClick={handleUpload} disabled={uploading}>\n        {uploading ? 'Uploading...' : 'Upload File'}\n      </button>\n\n      {uploading && (\n        <div>\n          <progress value={uploadProgress} max=\"100\"></progress>\n          <p>{uploadProgress}%</p>\n        </div>\n      )}\n\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n    </div>\n  );\n}\n\nexport default FileUpload;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}